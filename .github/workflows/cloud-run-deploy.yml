name: Deploy to Cloud Run

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]
    workflow_dispatch:

env:
    PROJECT_ID: nutrifit-459709
    SERVICE_NAME: nutri-fit-front
    REGION: europe-west1

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: "18"

            - name: Install dependencies
              run: npm ci

            - name: Run ESLint
              run: npm run lint

            - name: Build project
              run: npm run build

            - name: Run Cypress tests
              run: npm run test:e2e:headless

    deploy:
        needs: [test]
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main'
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Google Auth
              id: auth
              uses: google-github-actions/auth@v1
              with:
                  credentials_json: ${{ secrets.GCP_SA_KEY }}
                  project_id: ${{ env.PROJECT_ID }}

            - name: Set up Cloud SDK
              uses: google-github-actions/setup-gcloud@v1
              with:
                  project_id: ${{ env.PROJECT_ID }}

            - name: Authorize Docker push
              run: gcloud auth configure-docker

            - name: Build and Push Container
              run: |
                  docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .
                  docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

            - name: Deploy to Cloud Run
              run: |
                  gcloud run deploy ${{ env.SERVICE_NAME }} \
                    --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
                    --region ${{ env.REGION }} \
                    --platform managed \
                    --allow-unauthenticated \
                    --port 3000
